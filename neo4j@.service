[Unit]
Description=Neo4j
After=docker.service
Requires=docker.service
Wants=neo4j-logger@%i.service

[Service]
Environment="DOCKER_APP_VERSION=latest"

TimeoutStartSec=0
# Change killmode from "control-group" to "none" to let Docker remove
# work correctly.
KillMode=none
ExecStartPre=-/bin/bash -c '/usr/bin/docker kill "$(docker ps -q --filter=name=^/%p-%i_)" > /dev/null 2>&1'
ExecStartPre=-/bin/bash -c '/usr/bin/docker rm "$(docker ps -q --filter=name=^/%p-%i_)" > /dev/null 2>&1'
ExecStartPre=/bin/bash -c 'docker history neo4j:$DOCKER_APP_VERSION > /dev/null 2>&1 || docker pull neo4j:$DOCKER_APP_VERSION'

# hacky fix to wait for the etcd cluster to fully come up on restart
ExecStartPre=/bin/bash -c '/usr/bin/sleep 10'

# We echo this into a file to allow us to bypass the 2048 character limit on a single command.
ExecStartPre=/bin/bash -c 'echo "export ENV=$(/usr/bin/etcdctl get /ft/config/environment_tag);" > /tmp/env'
ExecStartPre=/bin/bash -c 'echo "export INITIAL_MEMBERS=$(fleetctl list-machines -fields ip -no-legend | xargs -I{} echo {}:5000 | tr \'\n\' \',\' | rev | cut -c 2- | rev)" >> /tmp/env'
ExecStartPre=/bin/bash -c 'echo "export ADDRESS=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)" >> /tmp/env'
ExecStartPre=/bin/bash -c 'echo "export HEAP_SIZE=$(/usr/bin/etcdctl get /ft/config/neo4j/dbms-memory-heap-maxSize)" >> /tmp/env'
ExecStartPre=/bin/bash -c 'echo "export PAGECACHE_SIZE=$(/usr/bin/etcdctl get /ft/config/neo4j/dbms-memory-pagecache-size)" >> /tmp/env'

# Also see http://neo4j.com/docs/operations-manual/3.2/installation/docker/ for configuration options.
ExecStart=/bin/sh -c '\
    source /tmp/env; \
    /usr/bin/docker run --rm --name %p-%i_$(uuidgen) \
    -v /vol/neo4j/data:/data \
    -v /vol/neo4j/logs:/logs \
    -e "NEO4J_dbms_security_auth__enabled=false" \
    -e "NEO4J_dbms_mode=CORE" \
    -e "NEO4J_causal__clustering_expected__core__cluster__size=3" \
    -e "NEO4J_causal__clustering_initial__discovery__members=$INITIAL_MEMBERS" \
    -e "NEO4J_causal__clustering_discovery__listen__address=0.0.0.0:5000" \
    -e "NEO4J_causal__clustering_discovery__advertised__address=$ADDRESS:5000" \
    -e "NEO4J_causal__clustering_transaction__listen__address=0.0.0.0:6000" \
    -e "NEO4J_causal__clustering_transaction__advertised__address=$ADDRESS:6000" \
    -e "NEO4J_causal__clustering_raft__listen__address=0.0.0.0:7000" \
    -e "NEO4J_causal__clustering_raft__advertised__address=$ADDRESS:7000" \
    -e "NEO4J_dbms_connectors_default__advertised__address=$ADDRESS" \
    -e "NEO4J_dbms_connectors_default__listen__address=0.0.0.0" \
    -e "NEO4J_dbms_memory_heap_initial__size=$HEAP_SIZE" \
    -e "NEO4J_dbms_memory_heap_max__size=$HEAP_SIZE" \
    -e "NEO4J_dbms_memory_pagecache_size=$PAGECACHE_SIZE" \
    -e "NEO4J_dbms_logs_query_enabled=true" \
    -e "NEO4J_dbms_logs_query_parameter__logging__enabled=true" \
    -e "NEO4J_dbms_logs_query_rotation_keep__number=1" \
    -e "NEO4J_dbms_logs_query_rotation_size=1m" \
    -e "NEO4J_dbms_logs_query_threshold=5s" \
    -e "NEO4J_dbms_logs_http_enabled=true" \
    -e "NEO4J_dbms_logs_http_rotation_keep__number=1" \
    -e "NEO4J_dbms_logs_http_rotation_size=1m" \
    -e "NEO4J_metrics_enabled=true" \
    -e "NEO4J_metrics_graphite_enabled=true" \
    -e "NEO4J_metrics_graphite_server=graphite.ft.com:2003" \
    -e "NEO4J_metrics_graphite_interval=3m" \
    -e "NEO4J_metrics_prefix=coco.services.$ENV.neo4j.%i" \
    -e "NEO4J_dbms_tx__log_rotation_retention__policy=2 days" \
    -e "NEO4J_dbms_threads_worker__count=64" \
    --network="host" neo4j:$DOCKER_APP_VERSION;'

ExecStartPost=/bin/bash -c 'etcdctl set /ft/services/neo4j/healthcheck false;'

ExecStop=-/bin/bash -c 'docker stop -t 60 "$(docker ps -q --filter=name=^/%p-%i_)"'
Restart=on-failure
RestartSec=60

[X-Fleet]
Conflicts=neo4j@*.service
